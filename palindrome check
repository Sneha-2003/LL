palindrome 
class Solution {
    public boolean isPalindrome(ListNode head) {
     ListNode mid=head,m1=head,temp=head;
        if(head==null)
            return false;
        while(m1!=null && m1.next!=null)
        {
            mid=mid.next;
            m1=m1.next.next;
        }
        
        ListNode current=mid,prev=null,next=null;
        
        while(current!=null)
        {
            next=current.next;
            current.next=prev;
            prev=current;
            current=next;
        }
        
        while(prev!=null && temp!=mid)
        {
            if(prev.val!=temp.val)
                return false;
            prev=prev.next;
            temp=temp.next;
        }
        return true;
    }
}

---------------------------------------------------------------------------------------------------------------

using stack::
class Solution {
    public boolean isPalindrome(ListNode head) {
            if(head==null)
            return false;
         if(head.next==null)
             return true;
        ListNode temp=head,temp1=head;
        Stack<Integer> s=new Stack<>();
        while(temp!=null)
        {
           s.push(temp.val);
            temp=temp.next;
        }
        for(int i=0;i<s.size();i++)
        {  int v=s.pop();
            if(v!=temp1.val)
                return false;
            temp1=temp1.next;
        }
        
        return true;
            
    }
}
